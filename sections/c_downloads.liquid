{% schema %}
  {
    "name": "Downloads",
    "settings": [],
     "presets": [
    {
      "name": "Codext Downloads"
    }
  ]
  }
{% endschema %}

{% if customer %}
<h2 class="welcome-heading">{{ 'welcome_heading' | t }}</h2>
<h5 class="welcome-sub-heading">{{ 'welcome_sub_heading' | t }}</h5>
<input type="text" id="searchInput" onkeyup="filterProducts()" placeholder="{{ 'search_placeholder' | t }}" style="margin-bottom: 10px;">
  <style>
    .product-container {
      border: 2px solid #fff;
      margin-bottom: 20px;
      display: flex;
      flex-direction: column; /* Ensures the content stacks vertically */
      position: relative; /* Ensures relative positioning context */
    }

    .product-header-container {
      display: flex; /* This will keep the image and the header in a row */
      width: 100%;
    }

    .product-image {
      flex: 0 0 auto; /* Keeps the image size according to its content */
      padding: 10px;
      background-color: #f2f2f2;
    }

    .product-image img {
      max-width: 100%;
    }

    .product-header {
      flex: 1; /* Allows the header to fill the rest of the space */
      cursor: pointer;
      padding: 10px;
      background-color: #f2f2f2;
      display: flex;
      align-items: center;
      position: relative;
    }

    .product-content {
      display: none; /* Initially hidden */
      padding: 10px;
      border-top: 1px solid #ddd;
      width: 100%; /* Ensures it spans the full width under both the image and header */
    }

    .arrow-down {
      position: absolute;
      top: 50%;
      right: 15px;
      transform: translateY(-50%);
      width: 0;
      height: 0;
      border-left: 5px solid transparent;
      border-right: 5px solid transparent;
      border-top: 5px solid black;
      transition: transform 0.3s ease;
    }

    .arrow-up {
      transform: translateY(-50%) rotate(180deg);
    }

    .product-container:hover {
      border-color: #e61446;
      border: 2px solid #e61446;
    }
  #searchInput {
    width: 100%;
    padding: 10px;
    box-sizing: border-box;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 16px;
  }
 .login-container {
  padding: 20px; /* Innenabstand f√ºr den Container */
}

.login-content {
  display: flex;
  flex-direction: column;
  align-items: center;
}
  </style>

  {% for product in collections.all.products %}
    <div class="product-container">
      <div class="product-header" onclick="toggleCollapse(this)">
        <div class="product-image">
          <img src="{{ product.featured_image | img_url }}" alt="{{ product.title }}">
        </div>
        <p>{{ product.title }}</p>
        <div class="arrow-down"></div>
      </div>
      <div class="product-content">
        {% for item in product.metafields.custom.pdp_downloads.value %}
          <div class="download-item">
            <a href="{{ item.datei | file_url }}" download target="_blank">
              <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" height="20px" style="margin-right: 5px;">
                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                <g id="SVGRepo_iconCarrier">
                  <path d="M6 21H18M12 3V17M12 17L17 12M12 17L7 12" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                </g>
              </svg>
              {{ item.linktitel }}
            </a>
          </div>
        {% endfor %}
      </div>
    </div>
  {% endfor %}

 <script>
  // Funktion zum Anzeigen/Verstecken des Inhalts beim Klicken auf den Header
  function toggleCollapse(element) {
    var content = element.parentElement.querySelector('.product-content');
    content.style.display = content.style.display === 'none' ? 'block' : 'none';
    var arrow = element.querySelector('.arrow-down');
    if (content.style.display === 'none') {
      arrow.classList.remove('arrow-up');
    } else {
      arrow.classList.add('arrow-up');
    }
  }

  // Funktion zum Filtern der Produkte basierend auf dem Eingabewert in der Suchleiste
  function filterProducts() {
    var input, filter, container, products, title, i, txtValue;
    input = document.getElementById('searchInput');
    filter = input.value.toUpperCase();
    container = document.getElementsByClassName('product-container');
    for (i = 0; i < container.length; i++) {
      title = container[i].getElementsByTagName('p')[0];
      txtValue = title.textContent || title.innerText;
      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        container[i].style.display = '';
      } else {
        container[i].style.display = 'none';
      }
    }
  }
</script>

{% else %}
<div class="login-container">
    <div class="login-content">
        <p class="login-message">{{ 'login_message' | t }}</p>
        <p class="login-sub-message">{{ 'login_sub_message' | t }}</p>
        <form action="/account/login" method="get">
            <button type="submit" class="login-button">{{ 'login_button' | t }}</button>
        </form>
    </div>
</div>
{% endif %}